name: Build and Push Docker Images

on:
  push:
    # branches:
    #   - main  # Runs when pushing to main branch
    paths:
      - 'proj/frontend/**'
      - 'proj/backend/**'
      - 'proj/nginx.conf'
      - 'proj/docker-compose.yml'
      - 'proj/database/init.sql'
  # pull_request:
  #   branches:
  #     - main

jobs:
  checkout: 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Debug commit event
        run: |
          echo "Modified files: ${{ github.event.head_commit.modified }}"
          echo "${{ github.event.commits }}"

  build-and-push-frontend:
    if: contains(github.event.head_commit.modified, 'proj/frontend/')
    needs: [checkout, docker-login, check-docker-compose]
    runs-on: ubuntu-latest
    steps:
      - name: Build and tag frontend image
        run: |
          echo "FRONTEND_CHANGED=true" >> $GITHUB_ENV
          echo "VITE_BACKEND_URL=http://${{ secrets.SERVER_HOST }}:8080" >> $GITHUB_ENV
          docker build -t $DOCKER_USERNAME/frontend:latest ./proj/frontend
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      - name: Push frontend image to Docker Hub
        run: |
          docker push $DOCKER_USERNAME/frontend:latest
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

  build-and-push-backend:
    if: contains(github.event.head_commit.modified, 'proj/backend/')
    needs: [checkout, docker-login, check-docker-compose]
    runs-on: ubuntu-latest
    steps:
      - name: Build and tag backend image
        run: |
          echo "BACKEND_CHANGED=true" >> $GITHUB_ENV
          docker build -t $DOCKER_USERNAME/backend:latest ./proj/backend
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      - name: Push backend image to Docker Hub
        run: |
          docker push $DOCKER_USERNAME/backend:latest
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  
  build-and-push-nginx:
    if: contains(github.event.head_commit.modified, 'proj/nginx.conf')
    needs: [checkout, docker-login, check-docker-compose]
    runs-on: ubuntu-latest
    steps:
      - name: Build and tag nginx image
        run: |
          echo "NGINX_CHANGED=true" >> $GITHUB_ENV
          docker build -t $DOCKER_USERNAME/nginx:latest ./proj/
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      - name: Push nginx image to Docker Hub
        run: |
          docker push $DOCKER_USERNAME/nginx:latest
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

  docker-login:
      runs-on: ubuntu-latest
      needs: checkout
      steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  check-docker-compose:
      runs-on: ubuntu-latest
      needs: checkout
      steps:
        - name: Copy docker-compose to server
          if: contains(github.event.head_commit.modified, 'docker-compose.yml')
          uses: appleboy/scp-action@v0.1.4
          with:
            host: ${{ secrets.SERVER_HOST }}
            username: ${{ secrets.SERVER_USER }}
            password: ${{ secrets.SERVER_PASSWORD }}
            source: "docker-compose.yml"
            target: "/home/${{ secrets.SERVER_USER }}/app"


  deploy:
    needs: [build-and-push-frontend, build-and-push-backend, build-and-push-nginx]
    runs-on: ubuntu-latest
    steps:
      - name: Build and restart affected containers
        run: |
          SERVICES_TO_BUILD=""

          if [ "${{ env.FRONTEND_CHANGED }}" == "true" ]; then
            SERVICES_TO_BUILD="frontend"
          fi
          if [ "${{ env.BACKEND_CHANGED }}" == "true" ]; then
            if [ -n "$SERVICES_TO_BUILD" ]; then
              SERVICES_TO_BUILD="$SERVICES_TO_BUILD backend"
            else 
              SERVICES_TO_BUILD="backend"
            fi
          fi
          if [ "${{ env.NGINX_CHANGED }}" == "true" ]; then
            if [ -n "$SERVICES_TO_BUILD" ]; then
              SERVICES_TO_BUILD="$SERVICES_TO_BUILD nginx"
            else 
              SERVICES_TO_BUILD="nginx"
            fi
          fi

          docker compose pull
          docker compose up -d $SERVICES_TO_BUILD
